/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package memorki;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;

/**
 *
 * @author Grzegorz Trzaska
 *
 */
public class JFWynik extends javax.swing.JFrame {
     /**
     * Ilość par, służy do wyświetleniatabeli dla konkretnego poziomu trudności
     */
    String ileKart = String.valueOf(JFMenu.IleKart);

    /**
     * Tworzenie klasy JFWynik
     * @throws java.io.IOException
     */
    public JFWynik() throws IOException {
        initComponents();
        odczyt();
        wyswietl();
    }

    String[] wynikTab = new String[1000];
    String[][] wynikT;
    int p = -1;
/**
* Wyświetlenie na ekranie 10 najlepszych wyników
*/
    public void wyswietl() {
        if (p < 11) {
            for (int i = 0; i < p; i++) {
                //  String[] wyn =wynikTab[i].split(",");
                JLabel label = new JLabel();
                label.setText(wynikT[i][0] + "   czas: " + wynikT[i][2] + "sek");
                label.setBounds(150, 25 * i + 50, 150, 25);
                add(label);
                // System.out.println(wynikTab[i]);
            }
        } else {
            for (int i = 0; i < 10; i++) {
             //   String[] wyn = wynikTab[i].split(",");
                JLabel label = new JLabel();
                label.setText(wynikT[i][0] + "   czas: " + wynikT[i][2] + "sek");
                label.setBounds(100, 25 * i + 5, 150, 25);
                add(label);
               // System.out.println(wynikTab[i]);
            }
        }

    }
/**
* Pobrnie danych z pliku zawierającego wyniki
     * @throws java.io.FileNotFoundException
*/
    public void odczyt() throws FileNotFoundException, IOException {
        FileReader fileReader = new FileReader("wyniki.txt");
        BufferedReader bufferedReader = new BufferedReader(fileReader);

        try {
            String textLine = bufferedReader.readLine();
            do {
               
                String[] li = textLine.split(",");
                if(p!=-1){
                if (li[1].equals(ileKart)) {
                    System.out.println(textLine);
                    wynikTab[p] = textLine;
                    p++;
                }
                }
                else if(p==-1){
                    p=0;
                }
                
                textLine = bufferedReader.readLine();
            } while (textLine != null);
        } finally {
            bufferedReader.close();
        }

        wynikT = new String[p][];
        for (int i = 0; i < p; i++) {
            wynikT[i] = wynikTab[i].split(",");

        }

        boolean swapped = true;
        int j = 0;
        String[] tmp;
        while (swapped) {
            swapped = false;
            j++;
            for (int i = 0; i < wynikT.length - j; i++) {
                if (Integer.parseInt(wynikT[i][2]) > Integer.parseInt(wynikT[i + 1][2])) {
                    tmp = wynikT[i];
                    wynikT[i] = wynikT[i + 1];
                    wynikT[i + 1] = tmp;
                    swapped = true;
                }
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        label1.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        label1.setText("TOP 10");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(165, 165, 165)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(168, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(437, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFWynik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFWynik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFWynik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFWynik.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new JFWynik().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(JFWynik.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Label label1;
    // End of variables declaration//GEN-END:variables
}
